/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsNewImport } from './routes/products/new'
import { Route as ProductsProductIdIndexImport } from './routes/products/$productId/index'
import { Route as ProductsProductIdEditImport } from './routes/products/$productId/edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsNewRoute = ProductsNewImport.update({
  id: '/products/new',
  path: '/products/new',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdIndexRoute = ProductsProductIdIndexImport.update({
  id: '/products/$productId/',
  path: '/products/$productId/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIdEditRoute = ProductsProductIdEditImport.update({
  id: '/products/$productId/edit',
  path: '/products/$productId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/products/new': {
      id: '/products/new'
      path: '/products/new'
      fullPath: '/products/new'
      preLoaderRoute: typeof ProductsNewImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId/edit': {
      id: '/products/$productId/edit'
      path: '/products/$productId/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof ProductsProductIdEditImport
      parentRoute: typeof rootRoute
    }
    '/products/$productId/': {
      id: '/products/$productId/'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/products/new': typeof ProductsNewRoute
  '/products': typeof ProductsIndexRoute
  '/products/$productId/edit': typeof ProductsProductIdEditRoute
  '/products/$productId': typeof ProductsProductIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/products/new': typeof ProductsNewRoute
  '/products': typeof ProductsIndexRoute
  '/products/$productId/edit': typeof ProductsProductIdEditRoute
  '/products/$productId': typeof ProductsProductIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/products/new': typeof ProductsNewRoute
  '/products/': typeof ProductsIndexRoute
  '/products/$productId/edit': typeof ProductsProductIdEditRoute
  '/products/$productId/': typeof ProductsProductIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/products/new'
    | '/products'
    | '/products/$productId/edit'
    | '/products/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/products/new'
    | '/products'
    | '/products/$productId/edit'
    | '/products/$productId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/products/new'
    | '/products/'
    | '/products/$productId/edit'
    | '/products/$productId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ProductsNewRoute: typeof ProductsNewRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ProductsProductIdEditRoute: typeof ProductsProductIdEditRoute
  ProductsProductIdIndexRoute: typeof ProductsProductIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ProductsNewRoute: ProductsNewRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ProductsProductIdEditRoute: ProductsProductIdEditRoute,
  ProductsProductIdIndexRoute: ProductsProductIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/products/new",
        "/products/",
        "/products/$productId/edit",
        "/products/$productId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/products/new": {
      "filePath": "products/new.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/products/$productId/edit": {
      "filePath": "products/$productId/edit.tsx"
    },
    "/products/$productId/": {
      "filePath": "products/$productId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
